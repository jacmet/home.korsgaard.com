- alias: Turn on outdoor lights at dusk
  trigger:
    platform: sun
    event: sunset
    offset: '-00:10:00'
  condition:
    condition: time
    before: '22:00:00'
  action:
    service: homeassistant.turn_on
    entity_id: group.outdoor_auto

- alias: Turn off outdoor lights at night
  trigger:
    platform: time
    at: '22:00:00'
  action:
    service: homeassistant.turn_off
    entity_id: group.outdoor_auto

- alias: Turn on christmas lights at dusk
  trigger:
    platform: sun
    event: sunset
    offset: '-01:0:00'
  condition:
    condition: state
    entity_id: binary_sensor.christmas
    state: 'on'
  action:
    service: homeassistant.turn_on
    entity_id: group.christmas_auto

- alias: Turn off christmas lights at night
  trigger:
    platform: time
    at: '23:00:00'
  condition:
    condition: state
    entity_id: binary_sensor.christmas
    state: 'on'
  action:
    service: homeassistant.turn_off
    entity_id: group.christmas_auto

- alias: Turn on christmas lights in the morning
  trigger:
    platform: time
    at: '07:00:00'
  condition:
    - condition: sun
      before: sunrise
    - condition: state
      entity_id: binary_sensor.christmas
      state: 'on'
  action:
    service: homeassistant.turn_on
    entity_id: group.christmas_auto

- alias: Turn off christmas lights at sunrise
  trigger:
    platform: sun
    event: sunrise
    offset: '+00:30:00'
  condition:
    condition: state
    entity_id: binary_sensor.christmas
    state: 'on'
  action:
    service: homeassistant.turn_off
    entity_id: group.christmas_auto

- alias: Turn on indoor lights at dusk
  trigger:
    platform: sun
    event: sunset
    offset: '-00:10:00'
  action:
    service: homeassistant.turn_on
    entity_id: group.indoor_auto

- alias: Turn off indoor lights at sunrise
  trigger:
    platform: sun
    event: sunrise
    offset: '+00:10:00'
  action:
    service: homeassistant.turn_off
    entity_id: group.indoor_auto

- alias: Turn on outdoor lights in the morning
  trigger:
    platform: time
    at: '07:30:00'
  condition:
    condition: sun
    before: sunrise
  action:
    service: homeassistant.turn_on
    entity_id: group.outdoor_auto

- alias: Turn off outdoor lights at sunrise
  trigger:
    platform: sun
    event: sunrise
    offset: '+00:10:00'
  action:
    service: homeassistant.turn_off
    entity_id: group.outdoor_auto

- alias: Turn on garden lights at dusk
  trigger:
    platform: sun
    event: sunset
    offset: '-00:10:00'
  condition:
    - condition: template
      # from April to end of October
      value_template: "{{ now().month in range(4, 11) }}"
    - condition: state
      entity_id: input_boolean.holiday_mode
      state: 'off'
  action:
    service: homeassistant.turn_on
    entity_id: group.garden_auto

- alias: Turn off garden lights at night
  trigger:
    platform: time
    at: '23:59:00'
  action:
    service: homeassistant.turn_off
    entity_id: group.garden_auto

- alias: Turn on TV light when digicorder is on after dusk
  trigger:
    - platform: sun
      event: sunset
    - platform: state
      entity_id: device_tracker.digicorder
      to: 'home'
  condition:
    - condition: state
      entity_id: device_tracker.digicorder
      state: 'home'
    - condition: sun
      after: sunset
    - condition: time
      before: '23:00:00'
    - condition: state
      entity_id: input_boolean.holiday_mode
      state: 'off'
  action:
    service: homeassistant.turn_on
    entity_id:
      - light.living_tv
      - light.living_rgb_bulb

- alias: Turn off TV light when digicorder is turned off or night
  trigger:
    - platform: state
      entity_id: device_tracker.digicorder
      to: 'not_home'
    - platform: time
      at: '23:30:00'
  action:
    service: homeassistant.turn_off
    entity_id:
      - light.living_tv
      - light.living_rgb_bulb

- alias: Turn off bed lights in the morning during the week
  trigger:
    platform: time
    at: '07:30:00'
  condition:
    condition: time
    weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
  action:
    service: homeassistant.turn_off
    entity_id: group.bed_lights

- alias: Turn off bed lights in the morning during the weekend
  trigger:
    platform: time
    at: '08:00:00'
  condition:
    condition: time
    weekday:
      - sat
      - sun
  action:
    service: homeassistant.turn_off
    entity_id: group.bed_lights

- alias: Turn on bed lights in the evening
  trigger:
    platform: time
    at: '21:00:00'
  condition:
    condition: state
    entity_id: input_boolean.holiday_mode
    state: 'off'
  action:
    service: homeassistant.turn_on
    entity_id: group.bed_lights

- alias: Open curtains in the morning
  trigger:
    platform: time
    at: '10:30:00'
  action:
    service: cover.open_cover
    entity_id: cover.bedroom_both_curtain

- alias: Close curtains at dusk
  trigger:
    platform: sun
    event: sunset
    offset: '00:30:00'
  action:
    service: cover.close_cover
    entity_id: cover.bedroom_both_curtain

- alias: Turn on upstairs fan in the morning
  trigger:
    - platform: time
      at: '10:30:00'
    - platform: time
      at: '10:35:00'
    - platform: time
      at: '10:40:00'
  condition:
    condition: state
    entity_id: input_boolean.holiday_mode
    state: 'off'
  action:
    service: homeassistant.turn_on
    entity_id: fan.upstairs_fan

- alias: Turn off upstairs fan in the afternoon
  trigger:
    - platform: time
      at: '13:00:00'
    - platform: time
      at: '13:05:00'
    - platform: time
      at: '13:10:00'
  condition:
    condition: state
    entity_id: input_boolean.holiday_mode
    state: 'off'
  action:
    service: homeassistant.turn_off
    entity_id: fan.upstairs_fan

- alias: Turn on heating in the morning during the winter
  trigger:
    platform: time
    at: "05:00:00"
  condition:
    - condition: state
      entity_id: input_boolean.holiday_mode
      state: 'off'
    - condition: template
      value_template: >
        {% set n = now() %}
        {{ n.month in [1, 2, 3, 10, 11, 12] }}
  action:
    - service: climate.set_preset_mode
      data:
        entity_id: climate.ha_heating
        preset_mode: 'comfort'

- alias: Turn on heating in the afternoon during the winter
  trigger:
    platform: time
    at: "15:00:00"
  condition:
    - condition: state
      entity_id: input_boolean.holiday_mode
      state: 'off'
    - condition: template
      value_template: >
        {% set n = now() %}
        {{ n.month in [1, 2, 3, 10, 11, 12] }}
  action:
    - service: climate.set_preset_mode
      data:
        entity_id: climate.ha_heating
        preset_mode: 'comfort'

- alias: Turn off heating on work days when nobody is home
  trigger:
    platform: time
    at: "08:30:00"
  condition:
    - condition: time
      weekday:
      - thu
      - fri
    - condition: state
      entity_id: device_tracker.eve_pc
      state: 'not_home'
    - condition: state
      entity_id: device_tracker.peter_pc
      state: 'not_home'
  action:
    - service: climate.set_preset_mode
      data:
        entity_id: climate.ha_heating
        preset_mode: 'away'

- alias: Turn off heating at night
  trigger:
    platform: time
    at: "22:00:00"
  action:
    - service: climate.set_preset_mode
      data:
        entity_id: climate.ha_heating
        preset_mode: 'away'

- alias: Turn on entrance wall light on motion after dark
  trigger:
    platform: state
    entity_id: binary_sensor.zigbee_motion_sensor
    to: 'on'
  condition:
    condition: or
    conditions:
      - condition: sun
        after: sunset
      - condition: sun
        before: sunrise
  action:
    service: homeassistant.turn_on
    entity_id: light.entrance_wall

- alias: Turn off entrance wall light 5 minutes after motion after dark
  trigger:
    platform: state
    entity_id: binary_sensor.zigbee_motion_sensor
    to: 'off'
    for:
      minutes: 5
  condition:
    condition: or
    conditions:
      - condition: sun
        after: sunset
      - condition: sun
        before: sunrise
  action:
    service: homeassistant.turn_off
    entity_id: light.entrance_wall

- alias: Automatically turn off light after 30 mins
  trigger:
    - platform: state
      entity_id:
        - light.bathroom_mirror
        - light.bathroom_ceiling
        - light.sibe_lego
        - light.bedroom_wall
        - light.evelyne_bed
        - light.peter_bed
        - light.kitchen_closets
        - light.entrance_wall
      from: 'off'
      to: 'on'
      for:
        hours: 0
        minutes: 30
        seconds: 0
  action:
    - service: light.turn_off
      data_template:
        entity_id: "{{ trigger.entity_id }}"

- alias: Automatically close garage door after 1h
  trigger:
    - platform: state
      entity_id: cover.garage_door
      to: 'open'
      for:
        hours: 1
        minutes: 0
        seconds: 0
  action:
    - service: cover.close_cover
      entity_id: cover.garage_door

- alias: Turn on Sibes lego light at 21:00
  trigger:
    platform: time
    at: '21:00:00'
  action:
    service: homeassistant.turn_on
    entity_id: light.sibe_lego

- alias: Handle upstairs all-off button for non-KNX lights
  trigger:
    platform: event
    event_type: knx_event
    event_data:
      destination: "3/0/2"
  action:
    service: homeassistant.turn_off
    entity_id: group.upstairs_auto_off

- alias: Handle downstairs all-off button for non-KNX lights
  trigger:
    platform: event
    event_type: knx_event
    event_data:
      destination: "3/0/3"
  action:
    service: homeassistant.turn_off
    entity_id: group.downstairs_auto_off

- alias: Reconnect hangout on external IP change
  trigger:
    platform: state
    entity_id: sensor.external_ip
  condition:
    - condition: template
      value_template: '{{ trigger.from_state.state != trigger.to_state.state }}'
    - condition: template
      value_template: '{{ not is_state("sensor.external_ip", "unavailable") }}'
  action:
    - service: hangouts.reconnect

- alias: Alert about opening of garage door by keypad
  trigger:
    platform: mqtt
    topic: "stat/sonoff-garage/POWER"
    payload: "ON"
  action:
    - service: notify.hangout_peter
      data:
        message: "Garage door opened by keypad"

- alias: Alert about garage door keypad alarm
  trigger:
    platform: mqtt
    topic: "stat/sonoff-garage/POWER2"
    payload: "ON"
  action:
    - service: notify.hangout_peter
      data:
        message: "Garage door keypad alarm triggered!"

- alias: Alert about upcoming trash pickup at 20:00
  trigger:
    platform: state
    entity_id: sensor.minutes_to_trash
    to: '240'
  condition:
    condition: state
    entity_id: input_boolean.holiday_mode
    state: 'off'
  action:
    - service: notify.hangout_peter
      data_template:
        message: "Do not forget to put out trash for tomorrow: {{ states.calendar.trash.attributes.message }}"

- alias: Alert about opening of doors when on holiday
  trigger:
    - platform: state
      entity_id: binary_sensor.front_door
      to: 'on'
    - platform: state
      entity_id: binary_sensor.downstairs_sliding_door
      to: 'on'
  condition:
    condition: state
    entity_id: input_boolean.holiday_mode
    state: 'on'
  action:
    - service: notify.hangout_peter
      data_template:
        message: "{{ trigger.to_state.attributes.friendly_name }} opened while on holiday!"

- alias: Alert about leaving front door open for more than 10 mins
  trigger:
    platform: state
    entity_id: binary_sensor.front_door
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 10
      seconds: 0
  action:
    - service: notify.hangout_peter
      data:
        message: "Front door open for more than 10 mins!"

- alias: Alert about leaving garage door open for more than 10 mins
  trigger:
    platform: state
    entity_id: cover.garage_door
    to: 'open'
    for:
      hours: 0
      minutes: 10
      seconds: 0
  action:
    - service: notify.hangout_peter
      data:
        message: "Garage door open for more than 10 mins!"

- alias: Enable holiday mode when away
  trigger:
    platform: state
    entity_id: calendar.holiday
    to: 'on'
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.holiday_mode

- alias: Disable holiday mode when not away
  trigger:
    platform: state
    entity_id: calendar.holiday
    to: 'off'
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.holiday_mode

  # holiday automation
- alias: Disable garage door at night when on holiday
  trigger:
    platform: time
    at: '20:00:00'
  condition:
    condition: state
    entity_id: input_boolean.holiday_mode
    state: 'on'
  action:
    service: homeassistant.turn_on
    entity_id: switch.garage_door_disable

- alias: Enable garage door in the morning when on holiday
  trigger:
    platform: time
    at: '08:00:00'
  condition:
    condition: state
    entity_id: input_boolean.holiday_mode
    state: 'on'
  action:
    service: homeassistant.turn_off
    entity_id: switch.garage_door_disable

- alias: On leaving holiday mode
  trigger:
    platform: state
    entity_id: input_boolean.holiday_mode
    to: 'off'
  action:
    service: homeassistant.turn_off
    entity_id: switch.garage_door_disable

- alias: Holiday - Turn on entrance light at dusk
  trigger:
    platform: sun
    event: sunset
    offset: '00:30:00'
  condition:
    - condition: state
      entity_id: input_boolean.holiday_mode
      state: 'on'
    - condition: time
      before: '22:50:00'
  action:
    service: homeassistant.turn_on
    entity_id: light.entrance_wall

- alias: Holiday - Turn off entrance light at night
  trigger:
    platform: time
    at: '22:50:00'
  condition:
    condition: state
    entity_id: input_boolean.holiday_mode
    state: 'on'
  action:
    service: homeassistant.turn_off
    entity_id: light.entrance_wall

- alias: Holiday - Turn on dinner light at dusk
  trigger:
    platform: sun
    event: sunset
    offset: '00:30:00'
  condition:
    - condition: state
      entity_id: input_boolean.holiday_mode
      state: 'on'
    - condition: time
      before: '23:0:00'
  action:
    service: homeassistant.turn_on
    entity_id: light.dinner_table

- alias: Holiday - Turn off dinner light at night
  trigger:
    platform: time
    at: '23:00:00'
  condition:
    condition: state
    entity_id: input_boolean.holiday_mode
    state: 'on'
  action:
    service: homeassistant.turn_off
    entity_id: light.dinner_table

- alias: Holiday - Turn on night hall light at 22:40
  trigger:
    platform: time
    at: '22:40:00'
  condition:
    condition: state
    entity_id: input_boolean.holiday_mode
    state: 'on'
  action:
    service: homeassistant.turn_on
    entity_id: light.night_hall

- alias: Holiday - Turn off night hall light at 23:10
  trigger:
    platform: time
    at: '23:10:00'
  condition:
    condition: state
    entity_id: input_boolean.holiday_mode
    state: 'on'
  action:
    service: homeassistant.turn_off
    entity_id: light.night_hall

- alias: Shoot purple nerf
  trigger:
    platform: mqtt
    topic: "cmnd/sonoff-ir/PURPLE"
    payload: "TOGGLE"
  action:
    - service: homeassistant.toggle
      entity_id: light.sibe_ceiling

- alias: Shoot red nerf
  trigger:
    platform: mqtt
    topic: "cmnd/sonoff-ir/RED"
    payload: "TOGGLE"
  action:
    - service: homeassistant.toggle
      entity_id: light.sibe_bed

- alias: Start roomba through Tasmota/IR
  trigger:
    platform: mqtt
    topic: "roomba/command"
    payload: "start"
  action:
    - service: mqtt.publish
      data:
        topic: 'cmnd/roomba/irsend'
        payload: '0,2786,1008,864,2854,862,2856,864,2854,2784,1010,838,2878,840,2878,838,19502,2810,982,866,2852,868,2848,870,2850,2788,1006,866,2850,866,2852,868,19474,2786,1008,840,2878,840,2876,840,2878,2760,1032,834,2884,812,2904,834,19506,2788,1006,836,2880,838,2880,836,2882,2784,1010,862,2856,864,2852,864,19474,2764,1032,862,2854,866,2850,866,2852,2810,984,868,2850,868,2848,868,19474,2784,1010,838,2878,840,2880,838,2878,2786,1008,838,2880,840,2876,842,19500,2790,1006,868,2850,866,2850,868,2850,2788,1004,838,2880,838,2880,838,19504,2782,1010,814,2904,836,2882,836,2882,2762,1030,866,2854,866,2852,866,19476,2784,1010,838,2880,864,2854,864,2854,2784,1010,838,2880,840,2878,840'

- alias: Run roomba on Mondays and Thursdays at 10h
  trigger:
    platform: time
    at: '10:00:00'
  condition:
    condition: time
    weekday:
      - mon
      - thu
  action:
    service: vacuum.start
    entity_id: vacuum.roomba

- alias: Run roborock on Mondays and Thursdays at 10h
  trigger:
    platform: time
    at: '10:00:00'
  condition:
    condition: time
    weekday:
      - mon
      - thu
  action:
    service: vacuum.start
    entity_id: vacuum.roborock

- alias: Publish solar watthours to MQTT and pvoutput
  trigger:
    platform: state
    entity_id: sensor.solar_watthours
  action:
    - service: mqtt.publish
      data:
        topic: "solar/watthours"
        payload_template: "{{ states.sensor.solar_watthours.state }}"
        retain: true
    - service: rest_command.pvoutput_addstatus

- alias: Automatically turn on sauna leds when sauna is running
  trigger:
    - platform: state
      entity_id: binary_sensor.sauna
      to: 'on'
  action:
    - service: homeassistant.turn_on
      entity_id: light.sauna

- alias: Automatically turn off sauna leds 45 mins after sauna is no longer running
  trigger:
    - platform: state
      entity_id: binary_sensor.sauna
      from: 'on'
      to: 'off'
      for:
        hours: 0
        minutes: 45
        seconds: 0
  action:
    - service: homeassistant.turn_off
      entity_id: light.sauna

- alias: Turn on/off stars lights when bedroom switch is toggled
  trigger:
    - platform: state
      entity_id: binary_sensor.bedroom_switch_4
  action:
    - service: >
        {% if trigger.to_state.state == "on" %}
          homeassistant.turn_on
        {% else %}
          homeassistant.turn_off
        {% endif %}
      entity_id:
        - light.stars_1
        - light.stars_2
        - light.stars_3
        - light.stars_4
        - light.stars_5

- alias: Handle sonoff-rfid tag Scan
  mode: single
  # Hide warnings when triggered while in delay.
  max_exceeded: silent
  variables:
    # Map tag ID to content
    tags:
      000C5126: radio-radioabc
      000C38B8: radio-los40
      000C365A: radio-qmusic
      0007D4E2: radio-joefm
      000C8782: radio-nostalgie
      000C56AA: celine-dion
      000740DD: julio-iglesias
      000B7B3C: xmas
      0007579A: 80s-90s
      00077893: silence
    players:
      Living: media_player.living
      Garden: media_player.garden
  trigger:
    platform: state
    entity_id: sensor.rfid_tag
  condition:
    # Test that we support this tag
    - "{{ trigger.to_state.state in tags }}"
    - "{{ states('input_select.current_player') in players }}"
  action:
    - variables:
        media_content_id: "{{ tags[trigger.to_state.state] }}"
        media_player: "{{ players[states('input_select.current_player')] }}"
    - service: homeassistant.turn_on
      entity_id: light.sonrfid
    - service: media_player.shuffle_set
      data:
        entity_id: "{{ media_player }}"
        shuffle: true
    - service: media_player.repeat_set
      data:
        entity_id: "{{ media_player }}"
        repeat: all
    - service: media_player.play_media
      data:
        entity_id: "{{ media_player }}"
        media_content_id: "{{ media_content_id }}"
        media_content_type: playlist
    - delay: 0.5
    - service: homeassistant.turn_off
      entity_id: light.sonrfid
    - delay: 1 # timeout before we allow processing next scan

- alias: Turn on/off Lones mirror light when night lamp changes
  trigger:
    platform: state
    entity_id: light.lone_bed
  action:
    service: >
      {% if trigger.to_state.state == "on" %}
        homeassistant.turn_on
      {% else %}
        homeassistant.turn_off
      {% endif %}
    entity_id: light.blitzwolf_switch

- alias: Living set volume
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_number.volume_living
  action:
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.living
        volume_level: >
          {{states('input_number.volume_living') | int / 100}}

- alias: Living update volume slider
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: sensor.volume_living
    - platform: homeassistant
      event: start
  condition:
    condition: state
    entity_id: media_player.living # receiver must be on to set the volume, without this would throw error on startup
    state: 'playing'
  action:
    - delay:
        seconds: 3
    - service: input_number.set_value
      data_template:
        entity_id: input_number.volume_living
        value: '{{ trigger.to_state.state }}'

- alias: Garden set volume
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_number.volume_garden
  action:
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.garden
        volume_level: >
          {{states('input_number.volume_garden') | int / 100}}

- alias: Garden update volume slider
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: sensor.volume_garden
    - platform: homeassistant
      event: start
  condition:
    condition: state
    entity_id: media_player.garden # receiver must be on to set the volume, without this would throw error on startup
    state: 'playing'
  action:
    - delay:
        seconds: 3
    - service: input_number.set_value
      data_template:
        entity_id: input_number.volume_garden
        value: '{{ trigger.to_state.state }}'

- alias: Play current playlist
  variables:
    playlists:
      Topradio: radio-topradio
      Radio ABC: radio-radioabc
      QMusic: radio-qmusic
      Los40: radio-los40
      MNM Hits: radio-mnmhits
      Studio Brussels: radio-stubru
      Joe FM: radio-joefm
      ANR: radio-anr
      Nostalgie: radio-nostalgie
      Julio Iglesias: julio-iglesias
      Silence: silence
      80s-90s: 80s-90s
      Celine Dion: celine-dion
    players:
      Living: media_player.living
      Garden: media_player.garden
  trigger:
    platform: state
    entity_id: input_select.current_playlist
  action:
    - variables:
        media_content_id: "{{ playlists[states('input_select.current_playlist')] }}"
        media_player: "{{ players[states('input_select.current_player')] }}"
    - service: media_player.shuffle_set
      data:
        entity_id: "{{ media_player }}"
        shuffle: true
    - service: media_player.repeat_set
      data:
        entity_id: "{{ media_player }}"
        repeat: >
          {% if 'radio-' in media_content_id %}
            off
          {% else %}
            all
          {% endif %}
    - service: media_player.play_media
      data:
        entity_id: "{{ media_player }}"
        media_content_id: "{{ media_content_id }}"
        media_content_type: playlist

- alias: Enable livingroom amplifier when starting to play
  trigger:
    platform: state
    entity_id: media_player.living
    from: 'off'
    to: 'playing'
  action:
    - service: rest_command.living_amp

- alias: Turn off tablet charger when charged
  trigger:
    platform: numeric_state
    entity_id: sensor.sm_t220_battery_level
    above: 75
  action:
    service: homeassistant.turn_off
    entity_id: switch.tablet_charger

- alias: Turn on tablet charger when low
  trigger:
    platform: numeric_state
    entity_id: sensor.sm_t220_battery_level
    below: 25
  action:
    service: homeassistant.turn_on
    entity_id: switch.tablet_charger
