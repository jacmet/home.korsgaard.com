- alias: Turn on outdoor lights at dusk
  trigger:
    platform: sun
    event: sunset
    offset: '-00:10:00'
  condition:
    condition: time
    before: '22:00:00'
  action:
    service: homeassistant.turn_on
    entity_id: group.outdoor_auto

- alias: Turn off outdoor lights at night
  trigger:
    platform: time
    at: '22:00:00'
  action:
    service: homeassistant.turn_off
    entity_id: group.outdoor_auto

- alias: Turn on christmas lights at dusk
  trigger:
    platform: sun
    event: sunset
    offset: '-01:0:00'
  condition:
    condition: template
    value_template: >
      {% set n = now() %}
      {{ n.month in [1, 12] }}
  action:
    service: homeassistant.turn_on
    entity_id: group.christmas_auto

- alias: Turn off christmas lights at night
  trigger:
    platform: time
    at: '23:00:00'
  condition:
    condition: template
    value_template: >
      {% set n = now() %}
      {{ n.month in [1, 12] }}
  action:
    service: homeassistant.turn_off
    entity_id: group.christmas_auto

- alias: Turn on christmas lights in the morning
  trigger:
    platform: time
    at: '07:00:00'
  condition:
    - condition: sun
      before: sunrise
    - condition: template
      value_template: >
        {% set n = now() %}
        {{ n.month in [1, 12] }}
  action:
    service: homeassistant.turn_on
    entity_id: group.christmas_auto

- alias: Turn off christmas lights at sunrise
  trigger:
    platform: sun
    event: sunrise
    offset: '+00:30:00'
  condition:
    condition: template
    value_template: >
      {% set n = now() %}
      {{ n.month in [1, 12] }}
  action:
    service: homeassistant.turn_off
    entity_id: group.christmas_auto

- alias: Turn on indoor lights at dusk
  trigger:
    platform: sun
    event: sunset
    offset: '-00:10:00'
  action:
    service: homeassistant.turn_on
    entity_id: group.indoor_auto

- alias: Turn off outdoor lights at sunrise
  trigger:
    platform: sun
    event: sunrise
    offset: '+00:10:00'
  action:
    service: homeassistant.turn_off
    entity_id: group.indoor_auto

- alias: Turn on outdoor lights in the morning
  trigger:
    platform: time
    at: '07:30:00'
  condition:
    condition: sun
    before: sunrise
  action:
    service: homeassistant.turn_on
    entity_id: group.outdoor_auto

- alias: Turn off outdoor lights at sunrise
  trigger:
    platform: sun
    event: sunrise
    offset: '+00:10:00'
  action:
    service: homeassistant.turn_off
    entity_id: group.outdoor_auto

- alias: Turn on garden lights at dusk
  trigger:
    platform: sun
    event: sunset
    offset: '-00:10:00'
  condition:
    - condition: template
      # from April to end of October
      value_template: "{{ now().month in range(4, 11) }}"
    - condition: state
      entity_id: input_boolean.holiday_mode
      state: 'off'
  action:
    service: homeassistant.turn_on
    entity_id: group.garden_auto

- alias: Turn off garden lights at night
  trigger:
    platform: time
    at: '23:59:00'
  action:
    service: homeassistant.turn_off
    entity_id: group.garden_auto

- alias: Turn on TV light when digicorder is on after dusk
  trigger:
    - platform: sun
      event: sunset
    - platform: state
      entity_id: device_tracker.digicorder
      to: 'home'
  condition:
    - condition: state
      entity_id: device_tracker.digicorder
      state: 'home'
    - condition: sun
      after: sunset
    - condition: time
      before: '23:00:00'
    - condition: state
      entity_id: input_boolean.holiday_mode
      state: 'off'
  action:
    service: homeassistant.turn_on
    entity_id: light.living_tv

- alias: Turn off TV light when digicorder is turned off or night
  trigger:
    - platform: state
      entity_id: device_tracker.digicorder
      to: 'not_home'
    - platform: time
      at: '23:30:00'
  action:
    service: homeassistant.turn_off
    entity_id: light.living_tv

- alias: Turn off bed lights in the morning during the week
  trigger:
    platform: time
    at: '07:30:00'
  condition:
    condition: time
    weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
  action:
    service: homeassistant.turn_off
    entity_id: group.bed_lights

- alias: Turn off bed lights in the morning during the weekend
  trigger:
    platform: time
    at: '08:00:00'
  condition:
    condition: time
    weekday:
      - sat
      - sun
  action:
    service: homeassistant.turn_off
    entity_id: group.bed_lights

- alias: Turn on bed lights in the evening
  trigger:
    platform: time
    at: '21:00:00'
  condition:
    condition: state
    entity_id: input_boolean.holiday_mode
    state: 'off'
  action:
    service: homeassistant.turn_on
    entity_id: group.bed_lights

- alias: Open curtains in the morning
  trigger:
    platform: time
    at: '10:30:00'
  action:
    service: cover.open_cover
    entity_id: cover.bedroom_both_curtain

- alias: Close curtains at dusk
  trigger:
    platform: sun
    event: sunset
    offset: '00:30:00'
  action:
    service: cover.close_cover
    entity_id: cover.bedroom_both_curtain

- alias: Turn on upstairs fan in the morning
  trigger:
    platform: time
    at: '10:30:00'
  condition:
    condition: state
    entity_id: input_boolean.holiday_mode
    state: 'off'
  action:
    service: homeassistant.turn_on
    entity_id: fan.upstairs_fan

- alias: Turn off upstairs fan in the afternoon
  trigger:
    platform: time
    at: '13:00:00'
  condition:
    condition: state
    entity_id: input_boolean.holiday_mode
    state: 'off'
  action:
    service: homeassistant.turn_off
    entity_id: fan.upstairs_fan

- alias: Turn on heating in the morning during the winter
  trigger:
    platform: time
    at: "05:00:00"
  condition:
    - condition: state
      entity_id: input_boolean.holiday_mode
      state: 'off'
    - condition: template
      value_template: >
        {% set n = now() %}
        {{ n.month in [1, 2, 3, 10, 11, 12] }}
  action:
    - service: climate.set_preset_mode
      data:
        entity_id: climate.heating
        preset_mode: 'comfort'

- alias: Turn on heating in the afternoon during the winter
  trigger:
    platform: time
    at: "15:00:00"
  condition:
    - condition: state
      entity_id: input_boolean.holiday_mode
      state: 'off'
    - condition: template
      value_template: >
        {% set n = now() %}
        {{ n.month in [1, 2, 3, 10, 11, 12] }}
  action:
    - service: climate.set_preset_mode
      data:
        entity_id: climate.heating
        preset_mode: 'comfort'

- alias: Turn off heating on work days when nobody is home
  trigger:
    platform: time
    at: "08:30:00"
  condition:
    - condition: time
      weekday:
      - thu
      - fri
    - condition: state
      entity_id: device_tracker.eve_pc
      state: 'not_home'
    - condition: state
      entity_id: device_tracker.peter_pc
      state: 'not_home'
  action:
    - service: climate.set_preset_mode
      data:
        entity_id: climate.heating
        preset_mode: 'away'

- alias: Turn off heating at night
  trigger:
    platform: time
    at: "22:00:00"
  action:
    - service: climate.set_preset_mode
      data:
        entity_id: climate.heating
        preset_mode: 'away'

- alias: Automatically turn off light after 30 mins
  trigger:
    - platform: state
      entity_id:
        - light.bathroom_mirror
        - light.bathroom_ceiling
        - light.sibe_lego
      from: 'off'
      to: 'on'
      for:
        hours: 0
        minutes: 30
        seconds: 0
  action:
    - service: light.turn_off
      data_template:
        entity_id: "{{ trigger.entity_id }}"

- alias: Turn on Sibes lego light at 21:00
  trigger:
    platform: time
    at: '21:00:00'
  action:
    service: homeassistant.turn_on
    entity_id: light.sibe_lego

- alias: Handle upstairs all-off button for non-KNX lights
  trigger:
    platform: event
    event_type: knx_event
    event_data:
      address: "3/0/2"
  action:
    service: homeassistant.turn_off
    entity_id: group.upstairs_auto_off

- alias: Handle downstairs all-off button for non-KNX lights
  trigger:
    platform: event
    event_type: knx_event
    event_data:
      address: "3/0/3"
  action:
    service: homeassistant.turn_off
    entity_id: group.downstairs_auto_off

- alias: Reconnect hangout on external IP change
  trigger:
    platform: state
    entity_id: sensor.external_ip
  condition:
    - condition: template
      value_template: '{{ trigger.from_state.state != trigger.to_state.state }}'
    - condition: template
      value_template: '{{ not is_state("sensor.external_ip", "unavailable") }}'
  action:
    - service: hangouts.reconnect

- alias: Alert about opening of garage door by keypad
  trigger:
    platform: mqtt
    topic: "stat/sonoff-garage/POWER"
    payload: "ON"
  action:
    - service: notify.hangout_peter
      data:
        message: "Garage door opened by keypad"

- alias: Alert about garage door keypad alarm
  trigger:
    platform: mqtt
    topic: "stat/sonoff-garage/POWER2"
    payload: "ON"
  action:
    - service: notify.hangout_peter
      data:
        message: "Garage door keypad alarm triggered!"

- alias: Alert about upcoming trash pickup at 20:00
  trigger:
    platform: state
    entity_id: sensor.minutes_to_trash
    to: '240'
  condition:
    condition: state
    entity_id: input_boolean.holiday_mode
    state: 'off'
  action:
    - service: notify.hangout_peter
      data_template:
        message: "Do not forget to put out trash for tomorrow: {{ states.calendar.trash.attributes.message }}"

- alias: Enable holiday mode when away
  trigger:
    platform: state
    entity_id: calendar.holiday
    to: 'on'
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.holiday_mode

- alias: Disable holiday mode when not away
  trigger:
    platform: state
    entity_id: calendar.holiday
    to: 'off'
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.holiday_mode

  # holiday automation
- alias: On entering holiday mode
  trigger:
    platform: state
    entity_id: input_boolean.holiday_mode
    to: 'on'
  action:
    service: homeassistant.turn_on
    entity_id: switch.garage_door_disable

- alias: On leaving holiday mode
  trigger:
    platform: state
    entity_id: input_boolean.holiday_mode
    to: 'off'
  action:
    service: homeassistant.turn_off
    entity_id: switch.garage_door_disable

- alias: Holiday - Turn on entrance light at dusk
  trigger:
    platform: sun
    event: sunset
    offset: '00:30:00'
  condition:
    - condition: state
      entity_id: input_boolean.holiday_mode
      state: 'on'
    - condition: time
      before: '22:50:00'
  action:
    service: homeassistant.turn_on
    entity_id: light.entrance_wall

- alias: Holiday - Turn off entrance light at night
  trigger:
    platform: time
    at: '22:50:00'
  condition:
    condition: state
    entity_id: input_boolean.holiday_mode
    state: 'on'
  action:
    service: homeassistant.turn_off
    entity_id: light.entrance_wall

- alias: Holiday - Turn on dinner light at dusk
  trigger:
    platform: sun
    event: sunset
    offset: '00:30:00'
  condition:
    - condition: state
      entity_id: input_boolean.holiday_mode
      state: 'on'
    - condition: time
      before: '23:0:00'
  action:
    service: homeassistant.turn_on
    entity_id: light.dinner_table

- alias: Holiday - Turn off dinner light at night
  trigger:
    platform: time
    at: '23:00:00'
  condition:
    condition: state
    entity_id: input_boolean.holiday_mode
    state: 'on'
  action:
    service: homeassistant.turn_off
    entity_id: light.dinner_table

- alias: Holiday - Turn on night hall light at 22:40
  trigger:
    platform: time
    at: '22:40:00'
  condition:
    condition: state
    entity_id: input_boolean.holiday_mode
    state: 'on'
  action:
    service: homeassistant.turn_on
    entity_id: light.night_hall

- alias: Holiday - Turn off night hall light at 23:10
  trigger:
    platform: time
    at: '23:10:00'
  condition:
    condition: state
    entity_id: input_boolean.holiday_mode
    state: 'on'
  action:
    service: homeassistant.turn_off
    entity_id: light.night_hall

- alias: Shoot purple nerf
  trigger:
    platform: mqtt
    topic: "cmnd/sonoff-ir/PURPLE"
    payload: "TOGGLE"
  action:
    - service: homeassistant.toggle
      entity_id: light.sibe_ceiling

- alias: Shoot red nerf
  trigger:
    platform: mqtt
    topic: "cmnd/sonoff-ir/RED"
    payload: "TOGGLE"
  action:
    - service: homeassistant.toggle
      entity_id: light.sibe_bed

- alias: Start roomba through Tasmota/IR
  trigger:
    platform: mqtt
    topic: "roomba/command"
    payload: "start"
  action:
    - service: mqtt.publish
      data:
        topic: 'cmnd/roomba/irsend'
        payload: '0,2786,1008,864,2854,862,2856,864,2854,2784,1010,838,2878,840,2878,838,19502,2810,982,866,2852,868,2848,870,2850,2788,1006,866,2850,866,2852,868,19474,2786,1008,840,2878,840,2876,840,2878,2760,1032,834,2884,812,2904,834,19506,2788,1006,836,2880,838,2880,836,2882,2784,1010,862,2856,864,2852,864,19474,2764,1032,862,2854,866,2850,866,2852,2810,984,868,2850,868,2848,868,19474,2784,1010,838,2878,840,2880,838,2878,2786,1008,838,2880,840,2876,842,19500,2790,1006,868,2850,866,2850,868,2850,2788,1004,838,2880,838,2880,838,19504,2782,1010,814,2904,836,2882,836,2882,2762,1030,866,2854,866,2852,866,19476,2784,1010,838,2880,864,2854,864,2854,2784,1010,838,2880,840,2878,840'

- alias: Run roomba on Mondays and Fridays at 10h
  trigger:
    platform: time
    at: '10:00:00'
  condition:
    condition: time
    weekday:
      - mon
      - fri
  action:
    service: vacuum.start
    entity_id: vacuum.roomba

- alias: Run roborock on Mondays, Wednesdays and Fridays at 10h
  trigger:
    platform: time
    at: '10:00:00'
  condition:
    condition: time
    weekday:
      - mon
      - wed
      - fri
  action:
    service: vacuum.start
    entity_id: vacuum.roborock
